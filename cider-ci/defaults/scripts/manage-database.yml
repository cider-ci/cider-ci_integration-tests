configure-database:
  start-when:
    - script: bundle-ui
  body: |
    #!/usr/bin/env ruby
    require 'yaml'
    config = \
      { 'test' =>
        { 'adapter' => 'postgresql',
          'encoding' => 'unicode',
          'host' => 'localhost',
          'pool' => 3,
          'username' => ENV['PGUSER'],
          'password' =>  ENV['PGPASSWORD'],
          'database' => "cider-ci_test_#{ENV['CIDER_CI_TRIAL_ID']}"}}
    File.open('user-interface/config/database.yml','w') { |file| file.write config.to_yaml }

create-database:
  body: |
    #!/usr/bin/env bash
    set -eux
    createdb "cider-ci_test_${CIDER_CI_TRIAL_ID}"
    psql -d "cider-ci_test_${CIDER_CI_TRIAL_ID}" -f user-interface/db/structure.sql
  start-when:
    - script: bundle-ui
    - script: configure-database
  terminate-when:
    - script: test
      states: [aborted, passed, failed, skipped]


delete-database:
  body: |
    #!/usr/bin/env bash
    set -eux
    dropdb "cider-ci_test_${CIDER_CI_TRIAL_ID}"
  ignore-state: true
  ignore-abort: true
  start-when:
    - script: create-database
      states: [aborted, passed, failed, skipped]
    - script: services-down
      states: [aborted, passed, failed, skipped]
    - script: run-ui
      states: [aborted, passed, failed, skipped]
