scripts:

  server-run:
    body: |
      set -eux
      cd server
      export CLASSPATH="../config:target/cider-ci.jar"
      java -jar target/cider-ci.jar server run
    ignore_state: true
    start_when:
      cider-ci has been compiled:
        script_key: compile_cider-ci
      server_has_been_configured:
        script_key: server-configure
      database has been migrated:
        script_key: migrate-database


  server-is-running:
    timeout: 3 Minutes
    environment_variables:
      STATUS_URL: http://localhost:{{SERVER_HTTP_PORT}}/cider-ci/status
    body: |
      #!/usr/bin/env bash
      set -eux
      until curl --silent --fail \
        --user test-check-is-running:${SERVICES_SECRET} \
        -H 'Accept: application/json' \
        -I "${STATUS_URL}";  do
        sleep 1;
      done
    start_when:
      the server is executing: &EXECUTING {script_key: server-run, states: [executing]}
    terminate_when:
      server-run is in terminal state: &TERMINAL
        script_key: server-run
        states: [aborted, defective, passed, failed, skipped]

  test:
    start_when:
      server is running: {script_key: server-is-running}

  server-shutdown:
    include: cider-ci/shared/lein_service_shutdown_script.yml

    timeout: 3 Seconds
    environment_variables:
      SHUTDOWN_URL: http://localhost:{{SERVER_HTTP_PORT}}/cider-ci/shutdown

    body: |
      #!/usr/bin/env bash
      set -eux
      curl -I -X POST --silent \
        --user shutdown:${SERVICES_SECRET} \
        -H 'Accept: application/json' \
        "${SHUTDOWN_URL}"

    start_when:
      include: cider-ci/shared/test_is_terminal.yml
      the server service is executing: *EXECUTING
      the server is or has been running:
        script_key: server-is-running

  delete-database: &START_WHEN_TERMINAL
    start_when:
      the server-run is in terminal state: *TERMINAL

