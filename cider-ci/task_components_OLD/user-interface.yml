traits:
  asdf-ruby: true

scripts:

  ui-configure-database:
    body: |
      #!/usr/bin/env bash
      set -euo pipefail
      cd integration-tests
      ./bin/env/ruby-setup
      ./cider-ci/bin/ui-configure-database.rb

  ui-bundle:
    exclusive_executor_resource: asdf-ruby
    timeout: 20 Minutes
    body: |
      #!/usr/bin/env bash
      set -euo pipefail
      cd user-interface
      ./bin/env/ruby-setup

  ui-run:
    body: |
      #!/usr/bin/env bash
      set -euo pipefail
      cd user-interface
      ./bin/rails_wrapper server -p  ${UI_HTTP_PORT}
    start_when:
      ui ruby is bundled:
        script_key: ui-bundle
      ui database has been configured:
        script_key: ui-configure-database
      database has been created:
        script_key: create-database
    terminate_when:
      shutdown is in terminal state:
        script_key: ui-shutdown
        states: [aborted, defective, passed, failed, skipped]


  ui-is-running:
    timeout: 3 Minutes
    environment_variables:
      STATUS_URL: http://localhost:{{UI_HTTP_PORT}}/cider-ci/ui/public
    body: |
      #!/usr/bin/env bash
      set -eux
      until curl --silent --fail --user x:${SERVICES_SECRET} -I  "${STATUS_URL}";  do
        sleep 1;
      done
    start_when:
      the ui is executing:
        script_key: ui-run
        states: [executing]
    terminate_when:
      ui-run is in terminal state:
        script_key: ui-run
        states: [aborted, defective, passed, failed, skipped]

  test:
    start_when:
      the ui is running:
        script_key: ui-is-running

  ui-shutdown:
    body: |
      kill -INT $(lsof -t -wni tcp:${UI_HTTP_PORT})
      sleep 1
    start_when:
      the ui service is executing:
        script_key: ui-run
        states: [executing]
      the ui service is or was running:
        script_key: ui-is-running
      the test is in terminal state:
        script_key: test
        states: [aborted, defective, passed, failed, skipped]
