### executor ##############################################

scripts:

  configure-executor:
    body: |
      #!/usr/bin/ruby
      require 'yaml'
      require 'openssl'

      File.open('executor-traits.yml','w') { |file| file.write ["Bash", "Git"].to_yaml }

      `java -jar server/target/cider-ci.jar executor -c executor/config.yml write-default-config -f`

      raise 'failed to create initial executor configuraion' \
        unless $?.exitstatus == 0

      config = YAML.load_file 'executor/config.yml'
      config['basic_auth']['password']= 'TestExecutor1234'
      config['http']['enabled']= true
      config['http']['port']= Integer(ENV['EXECUTOR_HTTP_PORT'])
      config['server_base_url']= ("http://localhost:" + ENV['REVERSE_PROXY_HTTP_PORT'])
      config['nrepl']['enabled']=true
      config['nrepl']['port']= Integer(ENV['EXECUTOR_NREPL_PORT'])
      config['max_load']= 2
      config['traits_files'] << 'executor-traits.yml'

      File.open('executor/config.yml','w') { |file| file.write config.to_yaml }

    start_when:
      cider-ci has been compiled:
        script_key: compile_cider-ci

  run-executor:
    body: |
      #!/usr/bin/env bash
      set -eux
      cd executor
      java -jar ../server/target/cider-ci.jar executor --config-file config.yml run
    start_when:
      executor has been configured:
        script_key: configure-executor

  executor-is-running:
    timeout: 3 Minutes
    body: |
      #!/usr/bin/env bash
      set -ux
      until curl --silent --fail \
          -I http://localhost:${EXECUTOR_HTTP_PORT}/ping ; do
        sleep 1;
      done
    start_when:
      executor is running:
        script_key: run-executor
        states: [executing]

  test:
    start_when:
      executor is running:
        script_key: executor-is-running

  shutdown-executor:
    body: |
      set -eux
      curl -X POST --silent --user ${EXECUTOR_ID}:${EXECUTOR_PASSWORD} \
        -I http://localhost:${EXECUTOR_HTTP_PORT}/shutdown

    start_when:
      include:  cider-ci/shared/test_is_terminal.yml
      executor is executing:
        script_key: run-executor
        states: [executing]
      executor is or was running:
        script_key: executor-is-running
        states: [passed]
